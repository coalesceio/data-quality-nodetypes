{%- for dep in sources[0].dependencies -%}
    {{ stage('Add DMFs Schedule') }}
    ALTER TABLE {{ref_raw(dep.node.location.name, dep.node.name)}} 
    {% if config.schedulePeriodOption == 'Minutes' %}
    SET DATA_METRIC_SCHEDULE = '{{config.schedulePeriod}} Minutes'
    {% elif config.schedulePeriodOption == 'CRON'%}
    SET DATA_METRIC_SCHEDULE = 'USING CRON {{config.scheduleCRON}}'
    {% elif config.schedulePeriodOption == 'TRIGGER_ON_CHANGES'%}
    SET DATA_METRIC_SCHEDULE = 'TRIGGER_ON_CHANGES'
    {% endif%}

    {% set object_expression = config.adddmfsobject.get('items') | map(attribute='system_dmfs_object') | list  %}

    {% if config.addobjectleveldmfs%}    
        {% for r in object_expression %}      
            {{ stage('Add Object Level DMF ') }}
            ALTER TABLE {{ref_raw(dep.node.location.name, dep.node.name)}} 
            ADD DATA METRIC FUNCTION SNOWFLAKE.CORE.{{ r }}
            ON  () ; 
        {% endfor %}
    {% endif %}

    {% set column, expression = config.adddmfs.get('items') | map(attribute='columnNameExpressions.name') | list, config.adddmfs.get('items') | map(attribute='system_dmfs') | list  %}

    {% if config.addcolumnleveldmfs%}    
        {% for r in column %}      
            {{ stage('Add Column DMF ') }}
            ALTER TABLE {{ref_raw(dep.node.location.name, dep.node.name)}} 
            ADD DATA METRIC FUNCTION SNOWFLAKE.CORE.{{ expression[loop.index0] }}
            ON  ({{ column[loop.index0] }}) ; 
        {% endfor %}
    {% endif %}
{%endfor%}
